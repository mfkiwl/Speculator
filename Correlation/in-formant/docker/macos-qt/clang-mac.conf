
QMAKE_OBJCFLAGS_PRECOMPILE       = -x objective-c-header -c ${QMAKE_PCH_INPUT} -o ${QMAKE_PCH_OUTPUT}
QMAKE_OBJCFLAGS_USE_PRECOMPILE   = $$QMAKE_CFLAGS_USE_PRECOMPILE
QMAKE_OBJCXXFLAGS_PRECOMPILE     = -x objective-c++-header -c ${QMAKE_PCH_INPUT} -o ${QMAKE_PCH_OUTPUT}
QMAKE_OBJCXXFLAGS_USE_PRECOMPILE = $$QMAKE_CFLAGS_USE_PRECOMPILE

QMAKE_XCODE_GCC_VERSION = com.apple.compilers.llvm.clang.1_0

# Use libc++ by default under MacOS/Clang
isEmpty(QMAKE_MACOSX_STDLIB) {
    QMAKE_MACOSX_STDLIB = libc++
}
isEqual(QMAKE_MACOSX_STDLIB, libstdc++) {
    # To enable libstdc++, passing -stdlib=XXX is not enough - at least under osxcross the stdheaders are otherwise not found
    # It is also required to disable GCC extensions by defining __STRICT_ANSI__ because not all GCC extensions are supported by Clang
    QMAKE_CXXFLAGS += -D__STRICT_ANSI__ -foc-use-gcc-libstdc++
    QMAKE_LFLAGS   += -D__STRICT_ANSI__ -foc-use-gcc-libstdc++
} else {
    QMAKE_CXXFLAGS += -stdlib=$${QMAKE_MACOSX_STDLIB}
    QMAKE_LFLAGS   += -stdlib=$${QMAKE_MACOSX_STDLIB}
}

QMAKE_AR_LTCG  = libtool -static -o

QMAKE_CFLAGS_APPLICATION_EXTENSION  = -fapplication-extension
